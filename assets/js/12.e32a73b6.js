(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{409:function(e,t,s){"use strict";s.r(t);var r=s(56),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"reading"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reading"}},[e._v("#")]),e._v(" Reading")]),e._v(" "),s("p",[e._v("The library offers some simple APIs in order to read your "),s("code",[e._v("EventItem")]),e._v("'s back. Some support reading all events, some support streaming events and some support querying the events in the store.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),s("p",[e._v("If you want to use an interface which only support's read operations the library offers the "),s("a",{attrs:{href:"https://github.com/IEvangelist/azure-cosmos-dotnet-repository/blob/main/src/Microsoft.Azure.CosmosEventSourcing/Stores/IReadOnlyEventStore.cs",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("IReadOnlyEventStore<TEventItem>")]),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" Events")]),e._v(" "),s("p",[e._v("The library offers a set of methods on the "),s("code",[e._v("IEventStore<TEventItem>")]),e._v(" that can be used to read the raw "),s("code",[e._v("EventItem")]),e._v("'s back from Cosmos. These can then be used to build up an "),s("code",[e._v("AggregateRoot")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"aggregate-roots"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aggregate-roots"}},[e._v("#")]),e._v(" Aggregate Roots")]),e._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//TODO:")]),e._v("\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);